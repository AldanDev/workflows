name: CI for tests

on:
  workflow_call:
    secrets:
      CODEARTIFACT_AWS_ACCESS_KEY_ID:
        required: false
      CODEARTIFACT_AWS_SECRET_ACCESS_KEY:
        required: false

    inputs:
      use_codeartifact:
        type: boolean
        default: false
      AWS_CODEARTIFACT_REGION:
        type: string
        default: 'ap-southeast-1'
      python-version:
        type: string
        default: '3.12'
      poetry-version:
        type: string
        default: '1.8.2'
      modules:
        type: string
        default: 'kyt_i18n_lib.cli'  
      AWS_CODEARTIFACT_DOMAIN:
        type: string
        

jobs:
    test:
      name: Test
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: Set up python
          uses: actions/setup-python@v5
          with:
            python-version: ${{ inputs.python-version }}

        - name: Install and configure Poetry
          uses: snok/install-poetry@v1.4
          with:
            version: ${{ inputs.poetry-version }}

        - name: Set up polaris
          uses: fairwindsops/polaris/.github/actions/setup-polaris@master
          with:
            version: 9.2.1

        - name: Configure AWS Credentials
          if: ${{ inputs.use_codeartifact }}
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.CODEARTIFACT_AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.CODEARTIFACT_AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ inputs.AWS_CODEARTIFACT_REGION }}

        - name: Get AWS Code Artifact token
          if: ${{ inputs.use_codeartifact }}
          run: >-
            echo "POETRY_HTTP_BASIC_ARTIFACT_PASSWORD=$(aws
            codeartifact
            get-authorization-token
            --domain ${{ inputs.AWS_CODEARTIFACT_DOMAIN }}
            --region ${{ inputs.AWS_CODEARTIFACT_REGION  }}
            --query authorizationToken
            --output text)"
            >> $GITHUB_ENV

        - name: Setup APT dependencies
          run: sudo apt-get install -y gettext

        - name: Install dependencies
          run: poetry install

        - name: Compile locales
          if: ${{ inputs.use_codeartifact }}
          run: poetry run python -m ${{ inputs.modules }} compile

        - name: Run lint
          run: make lint

        - name: Run tests
          run: make docker-test
          env:
            CODEARTIFACT_TOKEN: ${{ env.POETRY_HTTP_BASIC_ARTIFACT_PASSWORD }}
  